{
  var one;
  var two;
  one = 1;
  two = 2;
  println(one + two);
}

{
  var hello;
  var world;
  hello = "hello";
  world = "world";
  println(hello + ", " + world);
}

println("=============================");
var a = "global a";
var b = "global b";
var c = "global c";
{
  var a = "outer a";
  var b = "outer b";
  {
    var a = "inner a";
    println(a);
    println(b);
    println(c);
  }
  println(a);
  println(b);
  println(c);
}
println(a);
println(b);
println(c);


println("=============================");
{
  var a = "hej";
  if(a)
    println("a was truthy");
  else
    println("a was falsey");
  var b;
  if(b){
    println("b was truthy");
  } else {
    println("b was falsey");
  }
}

println("=============================");
{
  var a;
  var b = a or 42;
  print("default value of b is: ");
  println(b);
}

println("=============================");
{
  var T = 5;
  while(T > 0){
    println(T);
    T = T - 1;
  }
  for(var T = 5; T > 0; T = T - 1) println(T);
}

println("=============================");
{
  var a = 0;
  var temp;
  for (var b = 1; a < 100; b = temp + b) {
    println(a);
    temp = a;
    a = b;
  }
}

println("=============================");
{
  var t0 = clock();
  for(var i = 0; i < 10000; i = i + 1) {}
  var t1 = clock();
  print("Elapsed time: ");
  println(t1 - t0);
}

println("=============================");
{
  fun caller(fn){
    fn();
  }

  fun callMe(){
    println("Yaaaay");
  }

  caller(callMe);
}
println("=========fibonacci===========");
{
  fun fib(n){
    if(n <= 1) return n;
    return fib(n-2)+fib(n-1);
  }
  for(var i = 0; i < 10; i = i + 1) println(fib(i));
}
println("=========factorial===========");
{
  fun factorial(n){
    if(n <= 1) return 1;
    return n * factorial(n-1);
  }
  for(var i = 0; i < 10; i = i + 1) println(factorial(i));
}
println("=========counter=============");
{
  fun makeCounter(){
    var i = 0;
    fun count(){
      i = i + 1;
      println(i);
    }
    return count;
  }

  var counter = makeCounter();
  counter();
  counter();
}

println("=============================");
{
  fun hejsan(name){
    println("hejsan " + tostring(name));
  }
  println(tostring);
  var a = 42;
  println("a = " + tostring(a));
  println(hejsan);
  hejsan(hejsan);
}

println("=============================");
{
  var list = array_list_create();
  array_list_add(list, "Hello");
  array_list_add(list, 42);
  array_list_add(list, println);
  println(list);
  list = nil;
}

println("==========scopes=============");
{
  var a = "outer";
  {
    fun showA(){
      println(a);
    }

    showA();
    var a = "inner";
    showA();
  }
}

println("==========classes============");
{
  class Person{
    init(name){
      this.name = name;
    }
    greet(other){
      println("Hi " + other.name + ", my name is " + this.name + "!");
    }
  }
  var dubu = Person("Dubu");
  var mina = Person("Mina");
  dubu.greet(mina);
}

println("=========inheritance=========");
{
  class Shape {
    init(density){
      this.density = density;
    }
    mass(){
      return this.area() * this.density;
    }
  }
  class Rectangle < Shape {
    init(width, height, density){
      super.init(density);
      this.width = width;
      this.height = height;
    }
    area(){
      return this.width * this.height;
    }
  }
  class Circle < Shape {
    init(radius, density){
      super.init(density);
      this.radius = radius;
    }
    area(){
      return this.radius * this.radius * 3.1415926535898;
    }
  }

  var rect = Rectangle(4.0, 4.0, 1.0);
  var circle = Circle(2.0, 2.0);

  println("Mass of rect is   : " + tostring(rect.mass()));
  println("Mass of circle is : " + tostring(circle.mass()));
}
